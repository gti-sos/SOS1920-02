{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Analytics.svelte",
    "..\\..\\GraphAccidents.svelte",
    "..\\..\\API04.svelte",
    "..\\..\\API07.svelte",
    "..\\..\\API08.svelte",
    "..\\..\\API11.svelte",
    "..\\..\\API27.svelte",
    "..\\..\\API28.svelte",
    "..\\..\\GraphRoutes.svelte",
    "..\\..\\GraphRoutesV2.svelte",
    "..\\..\\04.svelte",
    "..\\..\\05.svelte",
    "..\\..\\06.svelte",
    "..\\..\\07.svelte",
    "..\\..\\08.svelte",
    "..\\..\\09.svelte",
    "..\\..\\12.svelte",
    "..\\..\\27.svelte",
    "..\\..\\GraphTourism.svelte.html",
    "..\\..\\API01.svelte.html",
    "..\\..\\API04.svelte.html",
    "..\\..\\API05.svelte.html",
    "..\\..\\API07.svelte.html",
    "..\\..\\API08.svelte.html",
    "..\\..\\API10.svelte.html",
    "..\\..\\API12.svelte.html",
    "..\\..\\API21.svelte.html",
    "..\\..\\API22.svelte.html",
    "..\\..\\API23.svelte.html",
    "..\\..\\API30.svelte.html"
  ],
  "sourcesContent": [
    "<script>\r\n    import {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    async function loadGraph() {\r\n\r\n        let MyDataA = [];\r\n        let MyDataC = [];\r\n        let MyDataT = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resDataA = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyDataA = await resDataA.json();\r\n        const resDataC = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyDataC = await resDataC.json();\r\n        const resDataT = await fetch(\"/api/v2/rural-tourism-stats\");\r\n        MyDataT = await resDataT.json();\r\n        MyDataA.forEach( (x) => {\r\n            MyDataC.forEach( (y) => {\r\n                MyDataT.forEach( (z) => {\r\n                    if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    }\r\n                })\r\n            });\r\n        });\r\n\r\n        am4core.useTheme(am4themes_kelly);\r\n        am4core.useTheme(am4themes_animated);\r\n        // Themes end\r\n\r\n        var chart = am4core.create(\"chartdiv\", am4plugins_forceDirected.ForceDirectedTree);\r\n        var networkSeries = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\r\n\r\n        chart.data = [{\r\n            name: \"Andalucia\",\r\n            children: MyDataGraph\r\n        }];\r\n\r\n        networkSeries.dataFields.value = \"value\";\r\n        networkSeries.dataFields.name = \"name\";\r\n        networkSeries.dataFields.children = \"children\";\r\n        networkSeries.nodes.template.tooltipText = \"{name}:{value}\";\r\n        networkSeries.nodes.template.fillOpacity = 1;\r\n\r\n        networkSeries.nodes.template.label.text = \"{name}\"\r\n        networkSeries.fontSize = 10;\r\n\r\n        networkSeries.links.template.strokeWidth = 1;\r\n\r\n        var hoverState = networkSeries.links.template.states.create(\"hover\");\r\n        hoverState.properties.strokeWidth = 3;\r\n        hoverState.properties.strokeOpacity = 1;\r\n\r\n        networkSeries.nodes.template.events.on(\"over\", function(event) {\r\n            event.target.dataItem.childLinks.each(function(link) {\r\n                link.isHover = true;\r\n            })\r\n            if (event.target.dataItem.parentLink) {\r\n                event.target.dataItem.parentLink.isHover = true;\r\n            }\r\n\r\n        })\r\n\r\n        networkSeries.nodes.template.events.on(\"out\", function(event) {\r\n            event.target.dataItem.childLinks.each(function(link) {\r\n                link.isHover = false;\r\n            })\r\n            if (event.target.dataItem.parentLink) {\r\n                event.target.dataItem.parentLink.isHover = false;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\nloadGraph();\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n\r\n</svelte:head>\r\n\r\n<main>\r\n    <h2 style=\"text-align: center;\">Analisis de todos los datos de los miembros de SOS1920-02</h2>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <div id=\"chartdiv\"></div>\r\n\r\n</main>\r\n\r\n<style>\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n    }\r\n\r\n    #chartdiv {\r\n        width: 100%;\r\n        height:550px;\r\n        max-width:100%;\r\n    }\r\n</style>",
    "<script>\r\n\r\n    import {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resData = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            MyDataGraph.push({name: x.province + \" \" + x.year, data: [parseInt(x.trafficaccidentvictim), parseInt(x.dead), parseInt(x.injured)], pointPlacement: 'on'});\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column',\r\n            },\r\n            title: {\r\n                text: 'Accidentes de Tráfico'\r\n            },\r\n            subtitle: {\r\n                text: 'Estadísticas de los accidentes de tráfico 2015'\r\n            },\r\n            xAxis: {\r\n                categories: [\r\n                    'Víctimas de accidentes',\r\n                    'Fallecidos',\r\n                    'Heridos'\r\n                ],\r\n                crosshair: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Números'\r\n                }\r\n            },\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n                    '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\r\n                footerFormat: '</table>',\r\n                shared: true,\r\n                useHTML: true\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    pointPadding: 0.2,\r\n                    borderWidth: 0\r\n                }\r\n            },\r\n            series: MyDataGraph,\r\n            responsive: {\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'horizontal',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <h2 style=\"text-align: center;\"> <i class=\"fas fa-car\"></i> Estadísticas de accidentes de tráfico</h2>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            En la gráfica podemos observar el número de: accidentes de tráfico con víctimas, fallecidos y heridos en accidentes de tráfico.\r\n        </p>\r\n    </figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    #container {\r\n        height: 600px;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n\r\n</style>",
    "<script>\r\n    import {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    async function loadGraph() {\r\n    \r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n        let Data04 = [];\r\n\r\n        console.log(\"Loading integration API 04...\");\r\n        const res = await fetch(\"https://sos1920-04.herokuapp.com/api/v1/vehicles\");\r\n        if (res.ok) {\r\n            console.log(\"Loaded correctly\");\r\n            const json = await res.json();\r\n            Data04 = json;\r\n        } else {\r\n            console.log(\"ERROR!\");\r\n        }\r\n\r\n        const resData = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            Data04.forEach( (y) => {\r\n                if (y.province.toLowerCase() == x.province && x.year != 2015) {\r\n                    MyDataGraph.push({name: x.province, data: [parseInt(x.trafficaccidentvictim), parseInt(x.dead), parseInt(x.injured), parseInt(y.car), parseInt(y.bus), parseInt(y.motorcycle), parseInt(y.truck)]});\r\n                }\r\n            });\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n\r\n            title: {\r\n                text: 'Integración de la API SOS1920-04: Número de vehículos.'\r\n            },\r\n\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Comparación'\r\n                }\r\n            },\r\n\r\n            xAxis: {\r\n                categories: [\r\n                    'Víctimas de accidentes',\r\n                    'Fallecidos',\r\n                    'Heridos',\r\n                    'Coches',\r\n                    'Autobuses',\r\n                    'Motos',\r\n                    'Camiones'\r\n                ]\r\n            },\r\n\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'middle'\r\n            },\r\n\r\n            series: MyDataGraph,\r\n\r\n            responsive: {\r\n                rules: [{\r\n                    condition: {\r\n                        maxWidth: 500\r\n                    },\r\n                    chartOptions: {\r\n                        legend: {\r\n                            layout: 'horizontal',\r\n                            align: 'center',\r\n                            verticalAlign: 'bottom'\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n\r\n        });\r\n    }\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Integracion con la api de del Grupo SOS1920-04.\r\n        </p>\r\n    </figure>\r\n\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        min-height: 50%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n</style>",
    "<script>\r\n    import {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n        let Data07 = [];\r\n\r\n        console.log(\"Loading integration API 07...\");\r\n        const res = await fetch(\"https://sos1920-07.herokuapp.com/api/v1/fertilizerImportsExports\");\r\n        if (res.ok) {\r\n            console.log(\"Loaded correctly\");\r\n            const json = await res.json();\r\n            Data07 = json;\r\n        } else {\r\n            console.log(\"ERROR!\");\r\n        }\r\n\r\n        const resData = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            if (x.year == 2018) {\r\n                MyDataGraph.push({name: x.province, data: [parseInt(x.trafficaccidentvictim), parseInt(x.dead), parseInt(x.injured), 0, 0, 0, 0]});\r\n            }\r\n        });\r\n        Data07.forEach( (y) => {\r\n            MyDataGraph.push({name: y.country, data: [0, 0, 0, parseInt(y.shortTonExport), parseInt(y.dollarExport), parseInt(y.shortTonImport), parseInt(y.dollarImport)]});\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n\r\n            title: {\r\n                text: 'Integración de la API SOS1920-07: Importación de fertilizantes.'\r\n            },\r\n\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Comparación'\r\n                }\r\n            },\r\n\r\n            xAxis: {\r\n                categories: [\r\n                    'Víctimas de accidentes',\r\n                    'Fallecidos',\r\n                    'Heridos',\r\n                    'Toneladas exportadas',\r\n                    'Dólares exportados',\r\n                    'Toneladas importadas',\r\n                    'Dólares importados'\r\n                ]\r\n            },\r\n\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'middle'\r\n            },\r\n\r\n            series: MyDataGraph,\r\n\r\n            responsive: {\r\n                rules: [{\r\n                    condition: {\r\n                        maxWidth: 500\r\n                    },\r\n                    chartOptions: {\r\n                        legend: {\r\n                            layout: 'horizontal',\r\n                            align: 'center',\r\n                            verticalAlign: 'bottom'\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n\r\n        });\r\n    }\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Integracion con la api de del Grupo SOS1920-07.\r\n        </p>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        min-height: 800px;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n</style>",
    "<script>\r\n    import {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n        let Data08 = [];\r\n\r\n        console.log(\"Loading integration API 08...\");\r\n        const res = await fetch(\"http://sos1920-08.herokuapp.com/api/v1/motogp-statistics\");\r\n        if (res.ok) {\r\n            console.log(\"Loaded correctly\");\r\n            const json = await res.json();\r\n            Data08 = json;\r\n        } else {\r\n            console.log(\"ERROR!\");\r\n        }\r\n\r\n        const resData = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            if (x.year == 2015) {\r\n                MyDataGraph.push({name: x.province, data: [parseInt(x.trafficaccidentvictim), parseInt(x.dead), parseInt(x.injured), 0, 0, 0]});\r\n            }\r\n        });\r\n        Data08.forEach( (y) => {\r\n            MyDataGraph.push({name: y.country, data: [0, 0, 0, y.world_title, y.victory, y.podium]});\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n\r\n            title: {\r\n                text: 'Integración de la API SOS1920-08: Estadísticas Moto-GP.'\r\n            },\r\n\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Comparación'\r\n                }\r\n            },\r\n\r\n            xAxis: {\r\n                categories: [\r\n                    'Víctimas de accidentes',\r\n                    'Fallecidos',\r\n                    'Heridos',\r\n                    'Titulos Mundiales',\r\n                    'Victorias',\r\n                    'Podiums'\r\n                ]\r\n            },\r\n\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'middle'\r\n            },\r\n\r\n            series: MyDataGraph,\r\n\r\n            responsive: {\r\n                rules: [{\r\n                    condition: {\r\n                        maxWidth: 500\r\n                    },\r\n                    chartOptions: {\r\n                        legend: {\r\n                            layout: 'horizontal',\r\n                            align: 'center',\r\n                            verticalAlign: 'bottom'\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n\r\n        });\r\n    }\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Integracion con la api de del Grupo SOS1920-08.\r\n        </p>\r\n    </figure>  \t\r\n\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        min-height: 50%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n</style>",
    "<script>\r\n    import {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    let MyData = [];\r\n    let MyDataGraph = [];\r\n    let Data11 = [];\r\n\r\n    async function loadGraph() {\r\n\r\n        console.log(\"Loading integration API 11...\");\r\n        const res = await fetch(\"https://sos1920-11.herokuapp.com/api/v2/crime-rate-stats\");\r\n        if (res.ok) {\r\n            console.log(\"Loaded correctly\");\r\n            const json = await res.json();\r\n            Data11 = json;\r\n        } else {\r\n            console.log(\"ERROR!\");\r\n        }\r\n\r\n        const resData = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            if (x.year == 2018) {\r\n                    MyDataGraph.push({\r\n                        name: x.province,\r\n                        data: [parseInt(x.trafficaccidentvictim), parseInt(x.dead), parseInt(x.injured), 0, 0, 0, 0, 0, 0]});\r\n                }\r\n        });\r\n        Data11.forEach( (y) => {\r\n                MyDataGraph.push({\r\n                    name: y.country,\r\n                    data: [0, 0, 0, y.cr_rate, y.cr_saferate, y.cr_homicrate, y.cr_homicount, y.cr_theftrate, y.cr_theftcount]\r\n                });\r\n            });\r\n\r\n        Highcharts.chart('container', {\r\n\r\n            title: {\r\n                text: 'Integración de la API SOS1920-11: Estadísticas de crimenes.'\r\n            },\r\n\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Comparación'\r\n                }\r\n            },\r\n\r\n            xAxis: {\r\n                categories: [\r\n                    'Víctimas de accidentes',\r\n                    'Fallecidos',\r\n                    'Heridos',\r\n                    'Crime Rate',\r\n                    'Safe Rate',\r\n                    'Homicide Rate',\r\n                    'Homicide Count',\r\n                    'Theft Rate',\r\n                    'Theft Count'\r\n                ]\r\n            },\r\n\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'middle'\r\n            },\r\n\r\n            series: MyDataGraph,\r\n\r\n            responsive: {\r\n                rules: [{\r\n                    condition: {\r\n                        maxWidth: 500\r\n                    },\r\n                    chartOptions: {\r\n                        legend: {\r\n                            layout: 'horizontal',\r\n                            align: 'center',\r\n                            verticalAlign: 'bottom'\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n\r\n        });\r\n    }\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Integracion con la api de del Grupo SOS1920-11.\r\n        </p>\r\n    </figure>\r\n\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        min-height: 50%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n</style>",
    "<script>\r\n    import {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n        let Data27 = [];\r\n\r\n        console.log(\"Loading integration API 27...\");\r\n        const res = await fetch(\"http://sos1920-27.herokuapp.com/api/v2/poverty-stats\");\r\n        if (res.ok) {\r\n            console.log(\"Loaded correctly\");\r\n            const json = await res.json();\r\n            Data27 = json;\r\n        } else {\r\n            console.log(\"ERROR!\");\r\n        }\r\n\r\n        const resData = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            if (x.year == 2015) {\r\n                MyDataGraph.push({\r\n                    name: x.province,\r\n                    data: [parseInt(x.trafficaccidentvictim)/1000, parseInt(x.dead)/1000, parseInt(x.injured)/1000, 0, 0, 0]});\r\n            }\r\n        });\r\n        Data27.forEach( (y) => {\r\n            MyDataGraph.push({\r\n                name: y.country,\r\n                data: [0, 0, 0, y.under_190, y.under_320, y.under_550]\r\n            });\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n\r\n            title: {\r\n                text: 'Integración de la API SOS1920-27: Estadísticas de pobreza.'\r\n            },\r\n\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Comparación'\r\n                }\r\n            },\r\n\r\n            xAxis: {\r\n                categories: [\r\n                    'Víctimas de accidentes',\r\n                    'Fallecidos',\r\n                    'Heridos',\r\n                    'Coches',\r\n                    'Autobuses',\r\n                    'Motos',\r\n                    'Camiones'\r\n                ]\r\n            },\r\n\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'middle'\r\n            },\r\n\r\n            series: MyDataGraph,\r\n\r\n            responsive: {\r\n                rules: [{\r\n                    condition: {\r\n                        maxWidth: 500\r\n                    },\r\n                    chartOptions: {\r\n                        legend: {\r\n                            layout: 'horizontal',\r\n                            align: 'center',\r\n                            verticalAlign: 'bottom'\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n\r\n        });\r\n    }\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Integracion con la api de del Grupo SOS1920-27.\r\n        </p>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        min-height: 50%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n</style>",
    "<script>\r\n    import {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n        let Data28 = [];\r\n\r\n        console.log(\"Loading integration API 28...\");\r\n        const res = await fetch(\"https://sos1920-28.herokuapp.com/api/v1/gce\");\r\n        if (res.ok) {\r\n            console.log(\"Loaded correctly\");\r\n            const json = await res.json();\r\n            Data28 = json;\r\n        } else {\r\n            console.log(\"ERROR!\");\r\n        }\r\n\r\n        const resData = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            if (x.year == 2015) {\r\n                MyDataGraph.push({name: x.province, data: [parseInt(x.trafficaccidentvictim), parseInt(x.dead), parseInt(x.injured), 0, 0, 0]});\r\n            }\r\n        });\r\n        Data28.forEach( (y) => {\r\n            MyDataGraph.push({name: y.country, data: [0, 0, 0, y.gce_country, y.gce_per_capita, y.gce_cars]});\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n\r\n            title: {\r\n                text: 'Integración de la API SOS1920-28: GCE.'\r\n            },\r\n\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Comparación'\r\n                }\r\n            },\r\n\r\n            xAxis: {\r\n                categories: [\r\n                    'Víctimas de accidentes',\r\n                    'Fallecidos',\r\n                    'Heridos',\r\n                    'Coches',\r\n                    'Autobuses',\r\n                    'Motos',\r\n                    'Camiones'\r\n                ]\r\n            },\r\n\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'middle'\r\n            },\r\n\r\n            series: MyDataGraph,\r\n\r\n            responsive: {\r\n                rules: [{\r\n                    condition: {\r\n                        maxWidth: 500\r\n                    },\r\n                    chartOptions: {\r\n                        legend: {\r\n                            layout: 'horizontal',\r\n                            align: 'center',\r\n                            verticalAlign: 'bottom'\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n\r\n        });\r\n    }\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Integracion con la api de del Grupo SOS1920-28.\r\n        </p>\r\n    </figure>\r\n\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        min-height: 50%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n</style>",
    "<script>\r\n\r\n    import {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    async function loadGraph() {\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            MyDataGraph.push({name: x.province + \" \" + x.year, data: [parseInt(x.metropolitan), parseInt(x.urban), parseInt(x.rest)]});\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'line'\r\n            },\r\n            title: {\r\n                text: 'Carriles Bici'\r\n            },\r\n            subtitle: {\r\n                text: 'Estadísticas de los carriles bici'\r\n            },\r\n            \r\n            xAxis: {\r\n                categories: [\r\n                    'Metropolitano',\r\n                    'Urbanos',\r\n                    'Resto'\r\n                ],\r\n                crosshair: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Números'\r\n                }\r\n            },\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n                    '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\r\n                footerFormat: '</table>',\r\n                shared: true,\r\n                useHTML: true\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    pointPadding: 0.2,\r\n                    borderWidth: 0\r\n                }\r\n            },\r\n            series: MyDataGraph,\r\n            responsive: {\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'horizontal',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <h3 style=\"text-align: center;\"> <i class=\"fas fa-bicycle\"></i> Estadísticas de carriles bici</h3>\t\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            En la gráfica podemos observar el número de: carriles bici en redes metropolitanas, urbanas y resto.\r\n        </p>\r\n    </figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    #container {\r\n        height: 600px;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n\r\n</style>",
    "<script>\r\n    import {onMount} from \"svelte\";\r\n    import {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            if (x.year == 2015) {\r\n                //MyDataGraphM.push(parseFloat(x.metropolitan));\r\n                //MyDataGraphL.push(x.province);\r\n                MyDataGraph.push({province: x.province + \" \" + x.year, kilometres: [parseInt(x.metropolitan)]});\r\n            }\r\n        });\r\n\r\n        am4core.ready(function() {\r\n\r\n            // Themes begin\r\n            am4core.useTheme(am4themes_dataviz);\r\n            am4core.useTheme(am4themes_animated);\r\n            // Themes end\r\n\r\n            // Create chart instance\r\n            var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n            \r\n            // Add data\r\n            chart.data = MyDataGraph;\r\n\r\n            // Set inner radius\r\n            chart.innerRadius = am4core.percent(50);\r\n\r\n            // Add and configure Series\r\n            var pieSeries = chart.series.push(new am4charts.PieSeries());\r\n            pieSeries.dataFields.value = \"kilometres\";\r\n            pieSeries.dataFields.category = \"province\";\r\n            pieSeries.slices.template.stroke = am4core.color(\"#fff\");\r\n            pieSeries.slices.template.strokeWidth = 2;\r\n            pieSeries.slices.template.strokeOpacity = 1;\r\n\r\n            // This creates initial animation\r\n            pieSeries.hiddenState.properties.opacity = 1;\r\n            pieSeries.hiddenState.properties.endAngle = -90;\r\n            pieSeries.hiddenState.properties.startAngle = -90;\r\n\r\n            });\r\n    }\r\n    \r\n    loadGraph();\r\n</script>\r\n\r\n<svelte:head>    \r\n\r\n</svelte:head>\r\n\r\n<style>\r\n    #chartdiv {\r\n      width: 100%;\r\n      height: 500px;\r\n    }\r\n    \r\n</style>\r\n\r\n<main>\r\n\r\n    <h3 style=\"text-align: center;\"> <i class=\"fas fa-bicycle\"></i> Estadísticas carril metropolitano en 2015</h3>\t\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <div id=\"chartdiv\"></div>\r\n\r\n</main>",
    "<script>\r\n\timport  {onMount} from \"svelte\";\r\n\timport {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    const url = \"http://sos1920-04.herokuapp.com/api/v1/roads/\";\r\n\r\n    let apiExterna = [];\r\n    let MyData = [];\r\n\tasync function loadGraph(){\r\n        console.log(\"Loading integration API 4...\");\t\r\n\t\tconst res = await fetch(url); \r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok, loaded successfully\");\r\n\t\t\tconst json = await res.json();\r\n            apiExterna = json;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        let items = [\"Metropolitano\", \"Urbano\", \"Resto\", \"Un carril\", \"Doble carril\", \"Autovía\", \"Autopista\"];\r\n        let valores = [];\r\n        let valor = {};\r\n        MyData.forEach((r) => {\r\n            apiExterna.forEach((v) => {\r\n                //if(r.year == 2018 && v.year ==2018){\r\n                    if(v.province.toLowerCase() == r.province){\r\n                        valor = {\r\n                            name: r.province,\r\n                            data: [r.metropolitan, r.urban, r.rest,\r\n                            v['oneway'], v['multipleway'], v['dualCarriagewayAndHighway'],v['highwayWithToll']]\r\n                            }\r\n                        valores.push(valor);\r\n                    }\r\n                //}\r\n            });    \r\n        });\r\n\r\n      \r\n            \r\n\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: 'Integración API Grupo 04'\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: items,\r\n                tickmarkPlacement: 'on',\r\n                title: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        return this.value ;\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                split: true,\r\n                valueSuffix: ''\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    stacking: 'normal',\r\n                    lineColor: '#666666',\r\n                    lineWidth: 1,\r\n                    marker: {\r\n                        lineWidth: 1,\r\n                        lineColor: '#666666'\r\n                    }\r\n                }\r\n            },\r\n            series: valores\r\n        });\r\n\t};\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i></Button>\r\n</p>\r\n\r\n<figure class=\"highcharts-figure\">\r\n    {#await  apiExterna}\r\n    Loading renewable sources...\r\n    {:then  apiExterna}\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p>   </p>\r\n        <p class=\"highcharts-description\">\r\n            Insertar texto\r\n        </p>\r\n        <p> <strong> Tabla con los datos proporcionados por la API 04 </strong> </p>\r\n\r\n    </figure>\t\r\n\r\n    \r\n\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th> Provincia </th>\r\n                <th> Año </th>\r\n                <th> Un carril</th>\r\n                <th> Doble carril </th>\r\n                <th> Autovía </th>\r\n                <th> Autopista</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each  apiExterna as apiExterna}\r\n            <tr>\r\n                <td> {apiExterna.province} </td>\r\n                <td> {apiExterna.year} </td>\r\n                <td> {apiExterna['oneway']} </td>\r\n                <td> {apiExterna['multipleway']} </td>\r\n                <td> {apiExterna['dualCarriagewayAndHighway']} </td>\r\n                <td> {apiExterna['highwayWithToll']} </td>\r\n            </tr>\r\n            {/each}\r\n        </tbody>\r\n    </Table>\r\n{/await}      \t\r\n\r\n  </figure>\r\n\r\n\r\n\r\n<style>\r\n\t#container {\r\n        height: 600px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>\r\n\r\n\r\n",
    "<script>\r\n\timport  {onMount} from \"svelte\";\r\n\timport {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    const url = \"https://sos1920-05.herokuapp.com/api/v1/health_public\";\r\n\r\n    let apiExterna = [];\r\n    let MyData = [];\r\n\tasync function loadGraph(){\r\n        console.log(\"Loading integration API 5...\");\t\r\n\t\tconst res = await fetch(url); \r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok, loaded successfully\");\r\n\t\t\tconst json = await res.json();\r\n            apiExterna = json;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        let items = [\"Metropolitano\", \"Urbano\", \"Resto\", \"Total\", \"Publico\", \"Publico_Pib\"];\r\n        let valores = [];\r\n        let metropolitan = [];\r\n        let urban = [];\r\n        let rest = [];\r\n        let sumaMetropolitan;\r\n        let sumaUrban;\r\n        let sumaRest;\r\n        let valor = {};\r\n        let spain = [];\r\n        MyData.forEach((r) => {\r\n            if(r.year==2015){\r\n            valor = {\r\n                   name: r.province,\r\n                   data: [r.metropolitan, r.urban, r.rest, 0, 0, 0]\r\n               }\r\n            valores.push(valor);\r\n            }\r\n        });\r\n\r\n        apiExterna.forEach((v) => {           \r\n            valor = {\r\n                name: v.country,\r\n                data: [0,0,0,v['total_spending'], v['public_spending'], v['public_spending_pib']]\r\n            }\r\n            valores.push(valor);        \r\n            \r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: 'Integración API Grupo 05'\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: items,\r\n                tickmarkPlacement: 'on',\r\n                title: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        return this.value ;\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                split: true,\r\n                valueSuffix: ''\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    stacking: 'normal',\r\n                    lineColor: '#666666',\r\n                    lineWidth: 1,\r\n                    marker: {\r\n                        lineWidth: 1,\r\n                        lineColor: '#666666'\r\n                    }\r\n                }\r\n            },\r\n            series: valores\r\n        });\r\n\t};\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i></Button>\r\n</p>\r\n\r\n<figure class=\"highcharts-figure\">\r\n    {#await  apiExterna}\r\n    Loading renewable sources...\r\n    {:then  apiExterna}\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p>   </p>\r\n        <p class=\"highcharts-description\">\r\n            Insertar texto\r\n        </p>\r\n        <p> <strong> Tabla con los datos proporcionados por la API 05 </strong> </p>\r\n\r\n    </figure>\t\r\n\r\n    \r\n\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th> País </th>\r\n                <th> Año </th>\r\n                <th> Total</th>\r\n                <th> Publico </th>\r\n                <th> Publico_Pib </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each  apiExterna as apiExterna}\r\n            <tr>\r\n                <td> {apiExterna.country} </td>\r\n                <td> {apiExterna.year} </td>\r\n                <td> {apiExterna['total_spending']} </td>\r\n                <td> {apiExterna['public_spending']} </td>\r\n                <td> {apiExterna['public_spending_pib']} </td>\r\n            </tr>\r\n            {/each}\r\n        </tbody>\r\n    </Table>\r\n{/await}      \t\r\n        \r\n  </figure>\r\n\r\n\r\n\r\n<style>\r\n\t#container {\r\n        height: 600px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>\r\n\r\n\r\n",
    "<script>\r\n\timport  {onMount} from \"svelte\";\r\n\timport {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    const url = \"https://sos1920-06.herokuapp.com/api/v2/not-hospitalized-stats\";\r\n\r\n    let apiExterna = [];\r\n    let MyData = [];\r\n\tasync function loadGraph(){\r\n        console.log(\"Loading integration API 6...\");\t\r\n\t\tconst res = await fetch(url); \r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok, loaded successfully\");\r\n\t\t\tconst json = await res.json();\r\n            apiExterna = json;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        let items = [\"Metropolitano\", \"Urbano\", \"Resto\", \"Totales\", \"Interurbanos\", \"Urbanos\"];\r\n        let valores = [];\r\n        let valor = {};\r\n\r\n        MyData.forEach((r) => {\r\n            apiExterna.forEach((v) => {\r\n                //if(r.year == 2018 && v.year ==2018){\r\n                    if(v.province.toLowerCase() == r.province){\r\n                        valor = {\r\n                            name: r.province,\r\n                            data: [r.metropolitan, r.urban, r.rest,\r\n                            v['total'], v['interurban'], v['urban']]\r\n                            }\r\n                        valores.push(valor);\r\n                    }\r\n                //}\r\n            });    \r\n        });\r\n\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: 'Integración API Grupo 06'\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: items,\r\n                tickmarkPlacement: 'on',\r\n                title: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        return this.value ;\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                split: true,\r\n                valueSuffix: ''\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    stacking: 'normal',\r\n                    lineColor: '#666666',\r\n                    lineWidth: 1,\r\n                    marker: {\r\n                        lineWidth: 1,\r\n                        lineColor: '#666666'\r\n                    }\r\n                }\r\n            },\r\n            series: valores\r\n        });\r\n\t};\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i></Button>\r\n</p>\r\n\r\n<figure class=\"highcharts-figure\">\r\n    {#await  apiExterna}\r\n    Loading renewable sources...\r\n    {:then  apiExterna}\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p>   </p>\r\n        <p class=\"highcharts-description\">\r\n            Insertar texto\r\n        </p>\r\n        <p> <strong> Tabla con los datos proporcionados por la API 06 </strong> </p>\r\n\r\n    </figure>\t    \r\n\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th> Provincia </th>\r\n                <th> Año </th>\r\n                <th> Totales</th>\r\n                <th> Interurbanos </th>\r\n                <th> Urbanos </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each  apiExterna as apiExterna}\r\n            <tr>\r\n                <td> {apiExterna.province} </td>\r\n                <td> {apiExterna.year} </td>\r\n                <td> {apiExterna['total']} </td>\r\n                <td> {apiExterna['interurban']} </td>\r\n                <td> {apiExterna['urban']} </td>\r\n            </tr>\r\n            {/each}\r\n        </tbody>\r\n    </Table>\r\n{/await}      \t\r\n\r\n  </figure>\r\n\r\n\r\n\r\n<style>\r\n\t#container {\r\n        height: 600px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>\r\n\r\n\r\n",
    "<script>\r\n\timport  {onMount} from \"svelte\";\r\n\timport {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    const url = \"https://sos1920-07.herokuapp.com/api/v2/imports\";\r\n\r\n    let apiExterna = [];\r\n    let MyData = [];\r\n\tasync function loadGraph(){\r\n        console.log(\"Loading integration API 7...\");\t\r\n\t\tconst res = await fetch(url); \r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok, loaded successfully\");\r\n\t\t\tconst json = await res.json();\r\n            apiExterna = json;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        let items = [\"Metropolitano\", \"Urbano\", \"Resto\", \"Malta\", \"Cebada\", \"Avena\", \"Desperdicios\",\"Alcohol\"];\r\n        let valores = [];\r\n        let valor = {};\r\n        MyData.forEach((r) => {\r\n            if(r.year==2015){\r\n            valor = {\r\n                   name: r.province,\r\n                   data: [r.metropolitan, r.urban, r.rest, 0, 0, 0, 0, 0]\r\n               }\r\n            valores.push(valor);\r\n            }\r\n        });\r\n        apiExterna.forEach((v) => {   \r\n            if(v.year==2000 && v.country!=\"total\"){        \r\n               valor = {\r\n                   name: v.country,\r\n                   data: [0, 0, 0, v['gdamalt']/1000, v['gdabarley']/1000, v['gdaoat']/3000, v['gdawaste']/1000, v['gdaethylalcohol']/1000]\r\n               }               \r\n               valores.push(valor);\r\n            }\r\n            \r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: 'Integración API 07'\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: items,\r\n                tickmarkPlacement: 'on',\r\n                title: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        return this.value ;\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                split: true,\r\n                valueSuffix: ''\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    stacking: 'normal',\r\n                    lineColor: '#666666',\r\n                    lineWidth: 1,\r\n                    marker: {\r\n                        lineWidth: 1,\r\n                        lineColor: '#666666'\r\n                    }\r\n                }\r\n            },\r\n            series: valores\r\n        });\r\n\t};\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> </Button>\r\n</p>\r\n\r\n<figure class=\"highcharts-figure\">\r\n    {#await  apiExterna}\r\n    Loading renewable sources...\r\n    {:then  apiExterna}\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p>   </p>\r\n        <p class=\"highcharts-description\">\r\n            Se ha tenido que disminuir el valor de la api externa ya que impedía que los datos de la api interna pudieran aparecen en la gráfica\r\n        </p>\r\n        <p> <strong> Tabla con los datos proporcionados por la API 07 </strong> </p>\r\n\r\n    </figure>\t    \r\n\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th> País </th>\r\n                <th> Año </th>\r\n                <th> Totales</th>\r\n                <th> Interurbanos </th>\r\n                <th> Urbanos </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each  apiExterna as apiExterna}\r\n            <tr>\r\n                <td> {apiExterna.country} </td>\r\n                <td> {apiExterna.year} </td>\r\n                <td> {apiExterna['gdamalt']} </td>\r\n                <td> {apiExterna['gdabarley']} </td>\r\n                <td> {apiExterna['gdaoat']} </td>\r\n                <td> {apiExterna['gdawaste']} </td>\r\n                <td> {apiExterna['gdaethylalcohol']} </td>\r\n            </tr>\r\n            {/each}\r\n        </tbody>\r\n    </Table>\r\n{/await}      \t\r\n\r\n  </figure>\r\n\r\n\r\n\r\n<style>\r\n\t#container {\r\n        height: 600px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>\r\n\r\n\r\n",
    "<script>\r\n\timport  {onMount} from \"svelte\";\r\n\timport {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    const url = \"http://sos1920-08.herokuapp.com/api/v2/electricity-produced-stats/\";\r\n\r\n    let apiExterna = [];\r\n    let MyData = [];\r\n\tasync function loadGraph(){\r\n    console.log(\"Loading integration API 8...\");\t\r\n\tconst res = await fetch(url); \r\n\tif (res.ok) {\r\n\t\tconsole.log(\"Ok, loaded successfully\");\r\n\t\tconst json = await res.json();\r\n        apiExterna = json;\r\n\t} else {\r\n\t\tconsole.log(\"ERROR!\");\r\n    }\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        let items = [\"Metropolitano\", \"Urbano\", \"Resto\", \"hidroeléctrico\", \"solar\", \"carbon\"];\r\n        let valores = [];\r\n        let valor = {};\r\n        MyData.forEach((r) => {\r\n            if(r.year==2015){\r\n            valor = {\r\n                   name: r.province,\r\n                   data: [r.metropolitan, r.urban, r.rest, 0, 0, 0]\r\n               }\r\n            valores.push(valor);\r\n            }\r\n        });\r\n        apiExterna.forEach( (v) => {           \r\n               valor = {\r\n                   name: v.state,\r\n                   data: [0, 0, 0, v['hydro']/20000, v['solar']/20000, v['coal']/20000]\r\n               }\r\n               \r\n               valores.push(valor);\r\n            \r\n            \r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: 'Integración API 08'\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: items,\r\n                tickmarkPlacement: 'on',\r\n                title: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        return this.value ;\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                split: true,\r\n                valueSuffix: ''\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    stacking: 'normal',\r\n                    lineColor: '#666666',\r\n                    lineWidth: 1,\r\n                    marker: {\r\n                        lineWidth: 1,\r\n                        lineColor: '#666666'\r\n                    }\r\n                }\r\n            },\r\n            series: valores\r\n        });\r\n\t};\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> </Button>\r\n</p>\r\n\r\n<figure class=\"highcharts-figure\">\r\n    {#await  apiExterna}\r\n    Loading renewable sources...\r\n    {:then  apiExterna}\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p>   </p>\r\n        <p class=\"highcharts-description\">\r\n            Se ha tenido que disminuir el valor de la api externa ya que impedía que los datos de la api interna pudieran aparecen en la gráfica\r\n        </p>\r\n        <p> <strong> Tabla con los datos proporcionados por la API 08 </strong> </p>\r\n\r\n    </figure>\t    \r\n\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th> País </th>\r\n                <th> Año </th>\r\n                <th> Hidroeléctrico</th>\r\n                <th> Solar </th>\r\n                <th> Carbon </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each  apiExterna as apiExterna}\r\n            <tr>\r\n                <td> {apiExterna.province} </td>\r\n                <td> {apiExterna.year} </td>\r\n                <td> {apiExterna['hydro']} </td>\r\n                <td> {apiExterna['solar']} </td>\r\n                <td> {apiExterna['coal']} </td>\r\n            </tr>\r\n            {/each}\r\n        </tbody>\r\n    </Table>\r\n{/await}      \t\r\n\r\n  </figure>\r\n\r\n\r\n\r\n<style>\r\n\t#container {\r\n        height: 600px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport  {onMount} from \"svelte\";\r\n\timport {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    const url = \"https://sos1920-09.herokuapp.com/api/v2/oil-coal-nuclear-energy-consumption-stats/\";\r\n\r\n    let apiExterna = [];\r\n    let MyData = [];\r\n\tasync function loadGraph(){\r\n        console.log(\"Loading integration API 9...\");\t\r\n\t\tconst res = await fetch(url); \r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok, loaded successfully\");\r\n\t\t\tconst json = await res.json();\r\n            apiExterna = json;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        let items = [\"Metropolitano\", \"Urbano\", \"Resto\", \"Consumo Petroleo\", \"Consumo Carbon\", \"Consumo E. Nuclear\"];\r\n        let valores = [];\r\n        let valor = {};\r\n        MyData.forEach((r) => {\r\n            if(r.year==2015){\r\n            valor = {\r\n                   name: r.province,\r\n                   data: [r.metropolitan, r.urban, r.rest, 0, 0, 0]\r\n               }\r\n            valores.push(valor);\r\n            }\r\n        });\r\n        apiExterna.forEach((v) => {         \r\n            if(v.year==2016){  \r\n               valor = {\r\n                   name: v.country,\r\n                   data: [0, 0, 0, v['oil-consumption'], v['coal-consumption'], v['nuclear-energy-consumption']]\r\n               }\r\n               \r\n               valores.push(valor);\r\n            }\r\n            \r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: 'Integración API 09'\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: items,\r\n                tickmarkPlacement: 'on',\r\n                title: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        return this.value ;\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                split: true,\r\n                valueSuffix: ''\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    stacking: 'normal',\r\n                    lineColor: '#666666',\r\n                    lineWidth: 1,\r\n                    marker: {\r\n                        lineWidth: 1,\r\n                        lineColor: '#666666'\r\n                    }\r\n                }\r\n            },\r\n            series: valores\r\n        });\r\n\t};\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> </Button>\r\n</p>\r\n\r\n<figure class=\"highcharts-figure\">\r\n                      \r\n    {#await  apiExterna}\r\n    Loading renewable sources...\r\n    {:then  apiExterna}\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p>   </p>\r\n        <p class=\"highcharts-description\">\r\n            Insertar texto\r\n        </p>\r\n        <p> <strong> Tabla con los datos proporcionados por la API 09 </strong> </p>\r\n\r\n    </figure>\t\r\n\r\n    \r\n\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th> País </th>\r\n                <th> Año </th>\r\n                <th> Consumo Petroleo</th>\r\n                <th> Consumo Carbon </th>\r\n                <th> Consumo E. Nuclear </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each  apiExterna as apiExterna}\r\n            <tr>\r\n                <td> {apiExterna.country} </td>\r\n                <td> {apiExterna.year} </td>\r\n                <td> {apiExterna['oil-consumption']} </td>\r\n                <td> {apiExterna['coal-consumption']} </td>\r\n                <td> {apiExterna['nuclear-energy-consumption']} </td>\r\n            </tr>\r\n            {/each}\r\n        </tbody>\r\n    </Table>\r\n{/await}      \t\r\n            \r\n        \r\n\r\n  </figure>\r\n\r\n\r\n\r\n<style>\r\n\t#container {\r\n        height: 600px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport  {onMount} from \"svelte\";\r\n\timport {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    const url = \"https://sos1920-12.herokuapp.com/api/v2/overdose-deaths\";\r\n\r\n    let apiExterna = [];\r\n    let MyData = [];\r\n\tasync function loadGraph(){\r\n        console.log(\"Loading integration API 12...\");\t\r\n\t\tconst res = await fetch(url); \r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok, loaded successfully\");\r\n\t\t\tconst json = await res.json();\r\n            apiExterna = json;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        let items = [\"Metropolitano\", \"Urbano\", \"Resto\", \"Muertes Masculinas\", \"Muertes Femeninas\", \r\n        \"Muertes Totales\", \"Edad Media\"];\r\n        let valores = [];\r\n        let valor = {};\r\n        MyData.forEach((r) => {\r\n            if(r.year==2015){\r\n            valor = {\r\n                   name: r.province,\r\n                   data: [r.metropolitan, r.urban, r.rest, 0, 0, 0, 0]\r\n               }\r\n            valores.push(valor);\r\n            }\r\n        });\r\n        apiExterna.forEach( (v) => {   \r\n            if(v.year==2015){        \r\n               valor = {\r\n                   name: v.country,\r\n                   data: [0, 0, 0, v['death_male'], v['death_female'], v['death_total'],v['mean_age']]\r\n               }\r\n               valores.push(valor);            \r\n            }\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: 'Integración API 12'\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: items,\r\n                tickmarkPlacement: 'on',\r\n                title: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        return this.value ;\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                split: true,\r\n                valueSuffix: ''\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    stacking: 'normal',\r\n                    lineColor: '#666666',\r\n                    lineWidth: 1,\r\n                    marker: {\r\n                        lineWidth: 1,\r\n                        lineColor: '#666666'\r\n                    }\r\n                }\r\n            },\r\n            series: valores\r\n        });\r\n\t};\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> </Button>\r\n</p>\r\n\r\n{#await  apiExterna}\r\nLoading renewable sources...\r\n{:then  apiExterna}\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p>   </p>\r\n    <p class=\"highcharts-description\">\r\n        Insertar texto\r\n    </p>\r\n    <p> <strong> Tabla con los datos proporcionados por la API 12</strong> </p>\r\n\r\n</figure>\t    \r\n\r\n<Table bordered>\r\n    <thead>\r\n        <tr>\r\n            <th> Provincia </th>\r\n            <th> Año </th>\r\n            <th> Muertes Masculinas</th>\r\n            <th> Muertes Femeninas </th>\r\n            <th> Muertes Totales </th>\r\n            <th> Edad Media </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {#each  apiExterna as apiExterna}\r\n        <tr>\r\n            <td> {apiExterna.province} </td>\r\n            <td> {apiExterna.year} </td>\r\n            <td> {apiExterna['death_male']} </td>\r\n            <td> {apiExterna['death_female']} </td>\r\n            <td> {apiExterna['death_total']} </td>\r\n            <td> {apiExterna['mean_age']} </td>\r\n        </tr>\r\n        {/each}\r\n    </tbody>\r\n</Table>\r\n{/await}      \t\r\n\r\n\r\n\r\n<style>\r\n\t#container {\r\n        height: 600px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>\r\n\r\n\r\n",
    "<script>\r\n\timport  {onMount} from \"svelte\";\r\n\timport {pop} from \"svelte-spa-router\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    const url = \"http://sos1920-27.herokuapp.com/api/v2/spc-stats/\";\r\n\r\n        let apiExterna = [];\r\n    let MyData = [];\r\n\tasync function loadGraph(){\r\n        console.log(\"Loading integration API 7...\");\t\r\n\t\tconst res = await fetch(url); \r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok, loaded successfully\");\r\n\t\t\tconst json = await res.json();\r\n            apiExterna = json;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        let items = [\"Metropolitano\", \"Urbano\", \"Resto\", \"Rango Masculino\", \"Rango Femenino\", \"Ratio\"];\r\n        let valores = [];\r\n        let valor = {};\r\n        MyData.forEach((r) => {\r\n            //if(r.year==2015){\r\n            valor = {\r\n                   name: r.province,\r\n                   data: [r.metropolitan, r.urban, r.rest, 0, 0, 0]\r\n               }\r\n            valores.push(valor);\r\n            //}\r\n        });\r\n        apiExterna.forEach( (v) => {           \r\n               valor = {\r\n                   name: v.country,\r\n                   data: [0, 0, 0, v['male_rank'], v['female_rank'], v['ratio']]\r\n               }\r\n               \r\n               valores.push(valor);\r\n            \r\n            \r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: 'Integración API 07'\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: items,\r\n                tickmarkPlacement: 'on',\r\n                title: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        return this.value ;\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                split: true,\r\n                valueSuffix: ''\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    stacking: 'normal',\r\n                    lineColor: '#666666',\r\n                    lineWidth: 1,\r\n                    marker: {\r\n                        lineWidth: 1,\r\n                        lineColor: '#666666'\r\n                    }\r\n                }\r\n            },\r\n            series: valores\r\n        });\r\n\t};\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> </Button>\r\n</p>\r\n\r\n<figure class=\"highcharts-figure\">\r\n    {#await  apiExterna}\r\n    Loading renewable sources...\r\n    {:then  apiExterna}\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p>   </p>\r\n        <p class=\"highcharts-description\">\r\n            Insertar texto\r\n        </p>\r\n        <p> <strong> Tabla con los datos proporcionados por la API 27 </strong> </p>\r\n\r\n    </figure>\t    \r\n\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th> País </th>\r\n                <th> Ambos Sexos</th>\r\n                <th> Ranking Masculino </th>\r\n                <th> Números Masculinos </th>\r\n                <th> Ranking Femenino </th>\r\n                <th> Media </th>\r\n                <th> Año </th>\r\n                <th> Continente </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each  apiExterna as apiExterna}\r\n            <tr>\r\n                <td> {apiExterna.country} </td>                \r\n                <td> {apiExterna['both_sex']} </td>\r\n                <td> {apiExterna['male_rank']} </td>\r\n                <td> {apiExterna['male_number']} </td>\r\n                <td> {apiExterna.year} </td>\r\n                <td> {apiExterna['female_rank']} </td>\r\n                <td> {apiExterna['female_number']} </td>\r\n                <td> {apiExterna['continent']} </td>\r\n            </tr>\r\n            {/each}\r\n        </tbody>\r\n    </Table>\r\n{/await}      \t\r\n\r\n  </figure>\r\n\r\n\r\n\r\n<style>\r\n\t#container {\r\n        height: 600px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\t\r\nasync function loadGraph() {\r\n\t\r\n\tlet MyData = [];\r\n\tlet MyDataGraph = [];\r\n\t\r\n\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\tMyData = await resData.json();\r\n\tMyData.forEach( (x) => {\r\n            MyDataGraph.push({name: x.province + \" \" + x.year, data: [parseInt(x.traveller), parseInt(x.overnightstay), parseInt(x.averagestay)], pointPlacement: 'on'});\r\n        });\r\n\t\r\n\tHighcharts.chart('container', {\r\n\t\tchart: {\r\n\t\t\ttype: 'areaspline'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\ttext: 'Turismo rural'\r\n\t\t},\r\n\t\t\r\n\t\txAxis: {\r\n\t\t\tcategories: [\r\n\t\t\t\t'Viajero',\r\n\t\t\t\t'Pernoctación',\r\n\t\t\t\t'Estancia media'\r\n\t\t\t],\r\n\t\t\tplotBands: [{ // visualize the weekend\r\n\t\t\t\tfrom: 4.5,\r\n\t\t\t\tto: 6.5,\r\n\t\t\t\tcolor: 'rgba(68, 170, 213, .2)'\r\n\t\t\t}]\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Fruit units'\r\n\t\t\t}\r\n\t\t},\r\n\t\ttooltip: {\r\n\t\t\tshared: true,\r\n\t\t\tvalueSuffix: ' units'\r\n\t\t},\r\n\t\tcredits: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\tplotOptions: {\r\n\t\t\tareaspline: {\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t}\r\n\t\t},\r\n\t\tseries: MyDataGraph\r\n\t});\r\n}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t\r\n</svelte:head>\r\n\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> <i class=\"fas fa-suitcase\"></i> Estadísticas del turismo rural</h3>\r\n\t\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p class=\"highcharts-description\">\r\n\t\t\tEn la gráfica podemos observar el número de: viajeros, pernoctaciones y estancia media del turismo rural en Andalucia.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n<style>\r\n\t#container {\r\n\t\theight: 400px; \r\n\t}\r\n\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_01 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-01.herokuapp.com/api/v2/natality-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 01 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_01 = json;\r\n\t\t\tconsole.log(API_01)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"sevilla\"||x.province==\"malaga\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.traveller,x.overnightstay]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_01.forEach((x) => {\r\n            if(x.year==2015 && (x.country==\"germany\"||x.country==\"italy\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x.natality_men,x.natality_women,0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Nacimientos y turismo rural en el año 2015'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Natalidad hombres', 'Natalidad mujeres', 'Viajeros', 'Pernoctaciones'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API natality-stats del grupo 01</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tNacimientos y turismo rural en el año 2015\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_04 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\tfetch(\"https://sos1920-04.herokuapp.com/api/v1/traffic_accidents/loadInitialData\");\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-04.herokuapp.com/api/v1/traffic_accidents\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 04 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_04 = json;\r\n\t\t\tconsole.log(API_04)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"cadiz\"||x.province==\"almeria\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.traveller,x.overnightstay]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_04.forEach((x) => {\r\n            if(x.province==\"Madrid\"||x.province==\"Pontevedra\"){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [x.accidentWithVictims,x.notHospitalizedWounded,0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Accidentes y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Accidentes con víctimas', 'No hospitalizados', 'Viajeros', 'Pernoctaciones'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API traffic_accidents del grupo 04</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparación entre los datos de accidentes de tráfico y turismo rural.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_05 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-05.herokuapp.com/api/v1/life_expectancies\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 05 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_05 = json;\r\n\t\t\tconsole.log(API_05)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"malaga\"||x.province==\"cadiz\"||x.province==\"cordoba\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.averagestay]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_05.forEach((x) => {\r\n\t\t\taux={\r\n\t\t\t\tname: x.country,\r\n\t\t\t\tdata: [x.women_life_expectancy,x.men_life_expectancy,0]\r\n\t\t\t}\r\n\t\t\tvalores.push(aux)\r\n\t\t\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Esperanza de vida y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Esperanza de vida en Mujeres', 'Esperanza de vida en Hombres', 'Estancia media'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API life_expectancies del grupo 05</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre la esperanza de vida y turismo rural\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_07 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-07.herokuapp.com/api/v2/foodsImports\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 07 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_07 = json;\r\n\t\t\tconsole.log(API_07)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"malaga\"||x.province==\"cadiz\"||x.province==\"cordoba\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.traveller]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_07.forEach((x) => {\r\n\t\t\tif(x.year==\"2015\"){\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.name,\r\n\t\t\t\t\tdata: [x.TSweANDCndy,x.TLiveAnimal,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Importaciones de alimentos y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Dulces y caramelos', 'Animales vivos', 'Viajeros'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API foodsImports del grupo 07</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre la importaciones de alimentos y turismo rural\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_08 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-08.herokuapp.com/api/v1/ucl_stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 08 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_08 = json;\r\n\t\t\tconsole.log(API_08)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"malaga\"||x.province==\"cadiz\"||x.province==\"cordoba\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.averagestay]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_08.forEach((x) => {\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.team,\r\n\t\t\t\t\tdata: [x.match,x.victory,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Partidos de la Champions League y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Partidos', 'Victorias', 'Estancia media'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API ucl del grupo 08</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre partidos de la Champions League y turismo rural\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_10 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-10.herokuapp.com/api/v2/global-suicides\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 10 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_10 = json;\r\n\t\t\tconsole.log(API_10)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"malaga\"||x.province==\"huelva\"||x.province==\"cordoba\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.averagestay]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_10.forEach((x) => {\r\n\t\t\tif(x.year==2008){\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x.men,x.women,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Datos de suicidios y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Hombres', 'Mujeres', 'Estancia media'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API global-suicides del grupo 10</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre datos de suicidios y turismo rural\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_12 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-12.herokuapp.com/api/v2/school-dropouts\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 12 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_12 = json;\r\n\t\t\tconsole.log(API_12)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"malaga\"||x.province==\"huelva\"||x.province==\"jaen\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.averagestay]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_12.forEach((x) => {\r\n\t\t\tif(x.year==2003){\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x.sd_mas,x.sd_fem,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Datos de abandono escolar y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Abandono escolar hombres', 'Abandono escolar mujeres', 'Estancia media'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API school-dropouts del grupo 12</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre datos de abandono escolar y turismo rural\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_21 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-21.herokuapp.com/api/v2/traffic-injuries\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 21 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_21 = json;\r\n\t\t\tconsole.log(API_21)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.traveller]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_21.forEach((x) => {\r\n\t\t\tif(x.auto_com==\"andalusia\" && x.year==2018){\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.auto_com,\r\n\t\t\t\t\tdata: [x.accident,x.dead]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Lesiones de tráfico y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Accidentes', 'Muertes', 'Viajeros'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API traffic-injuries del grupo 21</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre lesiones de tráfico y turismo rural\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_22 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-22.herokuapp.com/api/v1/og-basket-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 22 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_22 = json;\r\n\t\t\tconsole.log(API_22)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"malaga\"||x.province==\"huelva\"||x.province==\"cordoba\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.averagestay]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_22.forEach((x) => {\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x.threepoints,x.rebounds,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Datos de baloncesto y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Tiros de Tres', 'Rebotes', 'Estancia media'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API og-basket-stats del grupo 22</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre estadisticas de baloncesto y turismo rural.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_23 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-23.herokuapp.com/api/v2/offworks-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 23 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_23 = json;\r\n\t\t\tconsole.log(API_23)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"malaga\"||x.province==\"huelva\"||x.province==\"cordoba\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.traveller]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_23.forEach((x) => {\r\n\t\t\tif(x.year==2007){\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.community,\r\n\t\t\t\t\tdata: [x.accident,x.numberzone,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Bajas laborales y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Por accidentes', 'Numero de zonas', 'Viajeros'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API offworks-stats del grupo 23</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre bajas laborales y turismo rural.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_30 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-30.herokuapp.com/api/v3/indice_de_masa_corporal\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 23 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_30 = json;\r\n\t\t\tconsole.log(API_30)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.province==\"granada\"||x.province==\"sevilla\"||x.province==\"almeria\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [0,0,x.averagestay]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_30.forEach((x) => {\r\n\t\t\tif(x.year==2019){\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.place,\r\n\t\t\t\t\tdata: [x.indice_de_masa_corporal,x.tasa_obesidad,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Índice de masa corporal y turismo rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Por accidentes', 'Numero de zonas', 'Viajeros'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API indice_de_masa_corporal del grupo 30</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tComparativa entre el índice de masa corporal y turismo rural.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>"
  ],
  "names": [],
  "mappings": "AAkPI,SAAS,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,OAAO,KAAK,CACZ,UAAU,IAAI,AAClB,CAAC;ACpJD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACFD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACLD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACLD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACGD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACTD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACdD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;AC5CD,SAAS,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC;ACsFJ,UAAU,8BAAC,CAAC,AACL,MAAM,CAAE,KAAK,AACrB,CAAC,AAED,kBAAkB,8BAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACxB,CAAC,AAuBD,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC;AC7BA,UAAU,8BAAC,CAAC,AACL,MAAM,CAAE,KAAK,AACrB,CAAC,AAED,kBAAkB,8BAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACxB,CAAC,AAuBD,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC;AC3CA,UAAU,8BAAC,CAAC,AACL,MAAM,CAAE,KAAK,AACrB,CAAC,AAED,kBAAkB,8BAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACxB,CAAC,AAuBD,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC;AC5BA,UAAU,8BAAC,CAAC,AACL,MAAM,CAAE,KAAK,AACrB,CAAC,AAED,kBAAkB,8BAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACxB,CAAC,AAuBD,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC;ACnCA,UAAU,8BAAC,CAAC,AACL,MAAM,CAAE,KAAK,AACrB,CAAC,AAED,kBAAkB,8BAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACxB,CAAC,AAuBD,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC;AC3BA,UAAU,8BAAC,CAAC,AACL,MAAM,CAAE,KAAK,AACrB,CAAC,AAED,kBAAkB,8BAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACxB,CAAC,AAuBD,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC;ACxCA,UAAU,8BAAC,CAAC,AACL,MAAM,CAAE,KAAK,AACrB,CAAC,AAED,kBAAkB,8BAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACxB,CAAC,AAuBD,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC;AC1BA,UAAU,8BAAC,CAAC,AACL,MAAM,CAAE,KAAK,AACrB,CAAC,AAED,kBAAkB,8BAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACxB,CAAC,AAuBD,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC;ACzGA,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC,AAED,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC;ACOD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACLD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACZD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACPD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACTD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACPD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACVD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACND,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC"
}