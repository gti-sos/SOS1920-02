{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Analytics.svelte",
    "..\\..\\GraphAccidents.svelte",
    "..\\..\\GraphRoutes.svelte",
    "..\\..\\GraphRoutesV2.svelte",
    "..\\..\\GraphTourism.svelte.html"
  ],
  "sourcesContent": [
    "<script>\r\n    import {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    async function loadGraph() {\r\n\r\n        let MyDataA = [];\r\n        let MyDataC = [];\r\n        let MyDataT = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resDataA = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyDataA = await resDataA.json();\r\n        const resDataC = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyDataC = await resDataC.json();\r\n        const resDataT = await fetch(\"/api/v2/rural-tourism-stats\");\r\n        MyDataT = await resDataT.json();\r\n        MyDataA.forEach( (x) => {\r\n            MyDataC.forEach( (y) => {\r\n                MyDataT.forEach( (z) => {\r\n                    if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    } else if (x.province == y.province && x.province == z.province && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.province, children: [\r\n                            {name: \"Accidentes\", children: [\r\n                                {name: \"Accidentes con víctimas\", value: parseInt(x.trafficaccidentvictim)},\r\n                                {name: \"Fallecidos\", value: parseInt(x.dead)},\r\n                                {name: \"Heridos\", value: parseInt(x.injured)}\r\n                            ]},\r\n                            {name: \"Carril bici\", children: [\r\n                                {name: \"Metropolitano\", value: parseFloat(y.metropolitan)},\r\n                                {name: \"Urbano\", value: parseFloat(y.urban)},\r\n                                {name: \"Resto\", value: parseFloat(y.rest)}\r\n                            ]},\r\n                            {name: \"Turismo\", children: [\r\n                                {name: \"Viajero\", value: parseFloat(z.traveller)},\r\n                                {name: \"Pernoctación\", value: parseFloat(z.overnightstay)},\r\n                                {name: \"Estancia media\", value: parseFloat(z.averagestay)}\r\n                            ]}\r\n                        ]});\r\n                    }\r\n                })\r\n            });\r\n        });\r\n\r\n        am4core.useTheme(am4themes_kelly);\r\n        am4core.useTheme(am4themes_animated);\r\n        // Themes end\r\n\r\n        var chart = am4core.create(\"chartdiv\", am4plugins_forceDirected.ForceDirectedTree);\r\n        var networkSeries = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\r\n\r\n        chart.data = [{\r\n            name: \"Andalucia\",\r\n            children: MyDataGraph\r\n        }];\r\n\r\n        networkSeries.dataFields.value = \"value\";\r\n        networkSeries.dataFields.name = \"name\";\r\n        networkSeries.dataFields.children = \"children\";\r\n        networkSeries.nodes.template.tooltipText = \"{name}:{value}\";\r\n        networkSeries.nodes.template.fillOpacity = 1;\r\n\r\n        networkSeries.nodes.template.label.text = \"{name}\"\r\n        networkSeries.fontSize = 10;\r\n\r\n        networkSeries.links.template.strokeWidth = 1;\r\n\r\n        var hoverState = networkSeries.links.template.states.create(\"hover\");\r\n        hoverState.properties.strokeWidth = 3;\r\n        hoverState.properties.strokeOpacity = 1;\r\n\r\n        networkSeries.nodes.template.events.on(\"over\", function(event) {\r\n            event.target.dataItem.childLinks.each(function(link) {\r\n                link.isHover = true;\r\n            })\r\n            if (event.target.dataItem.parentLink) {\r\n                event.target.dataItem.parentLink.isHover = true;\r\n            }\r\n\r\n        })\r\n\r\n        networkSeries.nodes.template.events.on(\"out\", function(event) {\r\n            event.target.dataItem.childLinks.each(function(link) {\r\n                link.isHover = false;\r\n            })\r\n            if (event.target.dataItem.parentLink) {\r\n                event.target.dataItem.parentLink.isHover = false;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\nloadGraph();\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n\r\n</svelte:head>\r\n\r\n<main>\r\n    <h2 style=\"text-align: center;\">Analisis de todos los datos de los miembros de SOS1920-02</h2>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <div id=\"chartdiv\"></div>\r\n\r\n</main>\r\n\r\n<style>\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n    }\r\n\r\n    #chartdiv {\r\n        width: 100%;\r\n        height:550px;\r\n        max-width:100%;\r\n    }\r\n</style>",
    "<script>\r\n\r\n    import {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resData = await fetch(\"/api/v2/traffic-accidents\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            MyDataGraph.push({name: x.province + \" \" + x.year, data: [parseInt(x.trafficaccidentvictim), parseInt(x.dead), parseInt(x.injured)], pointPlacement: 'on'});\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'column',\r\n            },\r\n            title: {\r\n                text: 'Accidentes de Tráfico'\r\n            },\r\n            subtitle: {\r\n                text: 'Estadísticas de los accidentes de tráfico 2015'\r\n            },\r\n            xAxis: {\r\n                categories: [\r\n                    'Víctimas de accidentes',\r\n                    'Fallecidos',\r\n                    'Heridos'\r\n                ],\r\n                crosshair: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Números'\r\n                }\r\n            },\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n                    '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\r\n                footerFormat: '</table>',\r\n                shared: true,\r\n                useHTML: true\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    pointPadding: 0.2,\r\n                    borderWidth: 0\r\n                }\r\n            },\r\n            series: MyDataGraph,\r\n            responsive: {\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'horizontal',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <h2 style=\"text-align: center;\"> <i class=\"fas fa-car\"></i> Estadísticas de accidentes de tráfico</h2>\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            En la gráfica podemos observar el número de: accidentes de tráfico con víctimas, fallecidos y heridos en accidentes de tráfico.\r\n        </p>\r\n    </figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    #container {\r\n        height: 600px;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n\r\n</style>",
    "<script>\r\n\r\n    import {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    async function loadGraph() {\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            MyDataGraph.push({name: x.province + \" \" + x.year, data: [parseInt(x.metropolitan), parseInt(x.urban), parseInt(x.rest)]});\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'line'\r\n            },\r\n            title: {\r\n                text: 'Carriles Bici'\r\n            },\r\n            subtitle: {\r\n                text: 'Estadísticas de los carriles bici'\r\n            },\r\n            \r\n            xAxis: {\r\n                categories: [\r\n                    'Metropolitano',\r\n                    'Urbanos',\r\n                    'Resto'\r\n                ],\r\n                crosshair: true\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Números'\r\n                }\r\n            },\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n                    '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\r\n                footerFormat: '</table>',\r\n                shared: true,\r\n                useHTML: true\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    pointPadding: 0.2,\r\n                    borderWidth: 0\r\n                }\r\n            },\r\n            series: MyDataGraph,\r\n            responsive: {\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'horizontal',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n\r\n    <h3 style=\"text-align: center;\"> <i class=\"fas fa-bicycle\"></i> Estadísticas de carriles bici</h3>\t\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            En la gráfica podemos observar el número de: carriles bici en redes metropolitanas, urbanas y resto.\r\n        </p>\r\n    </figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 95%; \r\n        max-width: 100%;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    #container {\r\n        height: 600px;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n\r\n</style>",
    "<script>\r\n    import {onMount} from \"svelte\";\r\n    import {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resData = await fetch(\"/api/v2/evolution-of-cycling-routes\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            if (x.year == 2015) {\r\n                //MyDataGraphM.push(parseFloat(x.metropolitan));\r\n                //MyDataGraphL.push(x.province);\r\n                MyDataGraph.push({province: x.province + \" \" + x.year, kilometres: [parseInt(x.metropolitan)]});\r\n            }\r\n        });\r\n\r\n        am4core.ready(function() {\r\n\r\n            // Themes begin\r\n            am4core.useTheme(am4themes_dataviz);\r\n            am4core.useTheme(am4themes_animated);\r\n            // Themes end\r\n\r\n            // Create chart instance\r\n            var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n            \r\n            // Add data\r\n            chart.data = MyDataGraph;\r\n\r\n            // Set inner radius\r\n            chart.innerRadius = am4core.percent(50);\r\n\r\n            // Add and configure Series\r\n            var pieSeries = chart.series.push(new am4charts.PieSeries());\r\n            pieSeries.dataFields.value = \"kilometres\";\r\n            pieSeries.dataFields.category = \"province\";\r\n            pieSeries.slices.template.stroke = am4core.color(\"#fff\");\r\n            pieSeries.slices.template.strokeWidth = 2;\r\n            pieSeries.slices.template.strokeOpacity = 1;\r\n\r\n            // This creates initial animation\r\n            pieSeries.hiddenState.properties.opacity = 1;\r\n            pieSeries.hiddenState.properties.endAngle = -90;\r\n            pieSeries.hiddenState.properties.startAngle = -90;\r\n\r\n            });\r\n    }\r\n    \r\n    loadGraph();\r\n</script>\r\n\r\n<svelte:head>    \r\n\r\n</svelte:head>\r\n\r\n<style>\r\n    #chartdiv {\r\n      width: 100%;\r\n      height: 500px;\r\n    }\r\n    \r\n</style>\r\n\r\n<main>\r\n\r\n    <h3 style=\"text-align: center;\"> <i class=\"fas fa-bicycle\"></i> Estadísticas carril metropolitano en 2015</h3>\t\r\n\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n\r\n    <div id=\"chartdiv\"></div>\r\n\r\n</main>",
    "<script>\r\n\t\r\nasync function loadGraph() {\r\n\t\r\n\tlet MyData = [];\r\n\tlet MyDataGraph = [];\r\n\t\r\n\tconst resData = await fetch(\"/api/v2/rural-tourism-stats\");\r\n\tMyData = await resData.json();\r\n\tMyData.forEach( (x) => {\r\n            MyDataGraph.push({name: x.province + \" \" + x.year, data: [parseInt(x.traveller), parseInt(x.overnightstay), parseInt(x.averagestay)], pointPlacement: 'on'});\r\n        });\r\n\t\r\n\tHighcharts.chart('container', {\r\n\t\tchart: {\r\n\t\t\ttype: 'areaspline'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\ttext: 'Turismo rural'\r\n\t\t},\r\n\t\t\r\n\t\txAxis: {\r\n\t\t\tcategories: [\r\n\t\t\t\t'Viajero',\r\n\t\t\t\t'Pernoctación',\r\n\t\t\t\t'Estancia media'\r\n\t\t\t],\r\n\t\t\tplotBands: [{ // visualize the weekend\r\n\t\t\t\tfrom: 4.5,\r\n\t\t\t\tto: 6.5,\r\n\t\t\t\tcolor: 'rgba(68, 170, 213, .2)'\r\n\t\t\t}]\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Fruit units'\r\n\t\t\t}\r\n\t\t},\r\n\t\ttooltip: {\r\n\t\t\tshared: true,\r\n\t\t\tvalueSuffix: ' units'\r\n\t\t},\r\n\t\tcredits: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\tplotOptions: {\r\n\t\t\tareaspline: {\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t}\r\n\t\t},\r\n\t\tseries: MyDataGraph\r\n\t});\r\n}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t\r\n</svelte:head>\r\n\r\n\r\n<main>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p class=\"highcharts-description\">\r\n\t\t\tEn la gráfica podemos observar el número de: viajeros, pernoctaciones y estancia media del turismo rural en Andalucia.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n<style>\r\n\t#container {\r\n\t\theight: 400px; \r\n\t}\r\n\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n\r\n</style>"
  ],
  "names": [],
  "mappings": "AAkPI,SAAS,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,OAAO,KAAK,CACZ,UAAU,IAAI,AAClB,CAAC;ACpJD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACVD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;AC5CD,SAAS,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC;ACWJ,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC,AAED,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC"
}